import{_ as i,c as a,o as e,ag as t}from"./chunks/framework.DNjvOGMB.js";const E=JSON.parse('{"title":"📚 6.实现一个sleep函数","description":"","frontmatter":{},"headers":[],"relativePath":"10.前端相关手写/3.Promise场景题/6.实现一个sleep函数.md","filePath":"10.前端相关手写/3.Promise场景题/6.实现一个sleep函数.md","lastUpdated":1744614734000}'),n={name:"10.前端相关手写/3.Promise场景题/6.实现一个sleep函数.md"};function l(p,s,h,r,k,d){return e(),a("div",null,s[0]||(s[0]=[t(`<h1 id="📚-6-实现一个sleep函数" tabindex="-1">📚 6.实现一个sleep函数 <a class="header-anchor" href="#📚-6-实现一个sleep函数" aria-label="Permalink to &quot;📚 6.实现一个sleep函数&quot;">​</a></h1><h2 id="💻-代码实现" tabindex="-1">💻 代码实现 <a class="header-anchor" href="#💻-代码实现" aria-label="Permalink to &quot;💻 代码实现&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sleep</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">delay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        setTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(resolve, delay)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,3)]))}const c=i(n,[["render",l]]);export{E as __pageData,c as default};
